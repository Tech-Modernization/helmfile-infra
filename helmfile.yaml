#####################################################################
# repositories
###
### default values to set for args along with dedicated keys that can
### be set by contributers, cli args take precedence over these
#####################################################################

repositories:
# The artifactory repository is a cache of the official charts located at gs://kubernetes-charts
  - name: stable
    url: https://kubernetes-charts.storage.googleapis.com
  - name: jetstack
    url: https://charts.jetstack.io
  - name: bitnami
    url: https://charts.bitnami.com/bitnami
  - name: gitlab
    url: https://charts.gitlab.io/
  - name: confluentinc
    url: https://confluentinc.github.io/cp-helm-charts
  - name: strimzi
    url: https://strimzi.io/charts/
  - name: cloudbees
    url: https://charts.cloudbees.com/public/cloudbees

#####################################################################
# helmDefaults
###
### default values to set for args along with dedicated keys that can
### be set by contributers, cli args take precedence over these
#####################################################################

helmDefaults:
  verify: false
  wait: false
  timeout: 600
  force: true
  tls: false

#####################################################################
# releases
###
###  The desired states of Helm releases.
###  Helmfile runs various helm commands to converge the current state
###  in the live cluster to the desired state defined here.
#####################################################################

releases:
 - name: nginx-ingress
   namespace: nginx
   chart: stable/nginx-ingress
   version: 1.37.0
   values:
     - config/{{`{{ .Release.Name }}`}}/values.yaml.gotmpl
     - config/{{`{{ .Release.Name }}`}}/{{`{{ .Environment.Name }}`}}.yaml.gotmpl

 - name: cert-manager
   namespace: cert-manager
   chart: jetstack/cert-manager
   version: 0.15.1
   hooks:
     - events: ["prepare"]
       showlogs: true
       command: "kubectl"
       args: ["apply", "-f", "https://github.com/jetstack/cert-manager/releases/download/v0.15.1/cert-manager.crds.yaml" ]
     - events: ["prepare"]
       showlogs: true
       command: "kubectl"
       args: ["apply", "-f", "k8s_setup/issuer_prod.yaml" ]
     - events: ["prepare"]
       showlogs: true
       command: "kubectl"
       args: ["apply", "-f", "k8s_setup/issuer_staging.yaml" ]

# - name: etcd-operator
#   namespace: vault
#   chart: stable/etcd-operator
#   version: 0.10.3
#   values:
#     - config/{{`{{ .Release.Name }}`}}/values.yaml.gotmpl
## run only once here or as part of cluster setup (or just manual for now) 
##   hooks:
##     - events: ["prepare"]
##       showlogs: true
##       command: "./tls/setup-etcd.sh"
# - name: vault
#   namespace: vault
#   chart: ./charts/vault-helm-0.5.0
#   version: 0.5.0
#   values:
#     - config/{{`{{ .Release.Name }}`}}/values.yaml.gotmpl

{{ if eq .Environment.Name "gcp" }}
 - name: prometheus-operator
   namespace: prometheus
   chart: stable/prometheus-operator
   #version: 6.17.1
   version: 8.12.1
   values:
     - config/{{`{{ .Release.Name }}`}}/values.yaml.gotmpl
     - config/{{`{{ .Release.Name }}`}}/values-additionalPrometheusRules.yaml.gotmpl
     - config/{{`{{ .Release.Name }}`}}/{{`{{ .Environment.Name }}`}}.yaml.gotmpl
   hooks:
     - events: ["prepare"]
       showlogs: true
       command: "./jsonnet.sh"
       args: ["{{`{{.Release.Name}}`}}", "kubeapi"]
     - events: ["prepare"]
       showlogs: true
       command: "kubectl"
       #args: ["create", "secret", "generic", "prometheus-operator-prometheus-scrape-confg", "--from-file=resources/additional-scrape-configs.yaml", "-n", "prometheus" ]
       args: ["apply", "-f", "resources/prometheus-operator-prometheus-scrape-confg.yaml" ]
{{ end }}

 - name: myapp-prometheus-operator
   namespace: myapp-prometheus
   chart: stable/prometheus-operator
   #version: 6.0.0
   version: 8.12.1
   values:
     - config/{{`{{ .Release.Name }}`}}/values.yaml.gotmpl
     - config/{{`{{ .Release.Name }}`}}/values-additionalPrometheusRules.yaml.gotmpl
     - config/{{`{{ .Release.Name }}`}}/{{`{{ .Environment.Name }}`}}.yaml.gotmpl
   hooks:
     - events: ["prepare"]
       showlogs: true
       command: "./jsonnet.sh"
       args: ["{{`{{.Release.Name}}`}}", "myappapi"]
#      args: ["{{`{{.Environment.Name}}`}}", "{{`{{.Release.Name}}`}}", "{{`{{.HelmfileCommand}}`}}\ "]
#       command: "echo kubectl create configmap extra-configmap --namespace=myapp-prometheus --from-file=resources/extra --dry-run=true -o yaml"
###     command: "kubectl create configmap extra-configmap --namespace=myapp-prometheus --from-file=resources/extra --dry-run=true -o yaml | kubectl apply -f -"
#       #args: ["{{`{{.Environment.Name}}`}}", "{{`{{.Release.Name}}`}}", "{{`{{.HelmfileCommand}}`}}\ "]

# - name: prometheus-pushgateway
#   namespace: prometheus
#   chart: stable/prometheus-pushgateway
#   #version: 1.2.2
#   version: 1.0.1
#   values:
#     - config/{{`{{ .Release.Name }}`}}/values.yaml.gotmpl
#     - config/{{`{{ .Release.Name }}`}}/{{`{{ .Environment.Name }}`}}.yaml.gotmpl

 - name: jenkins
   namespace: devops
   chart: cloudbees/cloudbees-jenkins-distribution
   version: 2.204.307
#   chart: stable/jenkins
#   version: 1.18.0
   values:
     - config/{{`{{ .Release.Name }}`}}/values.yaml.gotmpl

# - name: jira
#   namespace: devops
#   chart: ./charts/atlassian-jira-software

# - name: confluence
#   namespace: devops
#   chart: ./charts/atlassian-confluence

# needs work, deploys first time but no login, not configs, second apply fails
# - name: gitlab
#   namespace: devops
#   #chart: stable/gitlab-ce
#   chart: gitlab/gitlab

# - name: hygieia
#   namespace: devops
#   chart: ./charts/hygieia

 - name: sonarqube
   namespace: sonarqube 
   chart: stable/sonarqube
   version: 4.0.1
#   chart: acme/sonarqube
#   version: 4.0.1-1
   values:
     - config/{{`{{ .Release.Name }}`}}/values.yaml.gotmpl
     - config/{{`{{ .Release.Name }}`}}/{{`{{ .Environment.Name }}`}}.yaml.gotmpl

# - name: confluent-oss
#   namespace: cp
#   chart: confluentinc/cp-helm-charts
#   version: 0.4.1
#   values:
#     - config/{{`{{ .Release.Name }}`}}/values.yaml.gotmpl

 - name: strimzi
   namespace: kafka
   chart: strimzi/strimzi-kafka-operator
   version: 0.17.0
   values:
     - config/{{`{{ .Release.Name }}`}}/values.yaml.gotmpl
   hooks:
     - events: ["postsync"]
       showlogs: true
       command: "kubectl"
       args: ["create", "-f", "config/{{`{{.Release.Name}}`}}/my-kafka.yaml"]

# - name: twistlock-defender
#   namespace: twistlock
#   chart: ./charts/twistlock-defender
#   version: 19.11.506

 - name: atlantis
   namespace: devops
   chart: stable/atlantis
   version: 3.11.2
   values:
     - config/{{`{{ .Release.Name }}`}}/values.yaml.gotmpl

 - name: spinnaker
   namespace: devops
   chart: stable/spinnaker
   version: 2.0.0-rc4
   values:
     - config/{{`{{ .Release.Name }}`}}/values.yaml.gotmpl


#####################################################################
# environments
###
###  The list of environments managed by helmfile.
###
#####################################################################

environments:
  default:
  lprod:
    values:
    - environments/common/values.yaml
    - environments/lprod/values.yaml
    secrets:
    - environments/lprod/secret.yaml
  ldev:
    values:
    - environments/common/values.yaml
    - environments/ldev/values.yaml
    secrets:
    - environments/ldev/secret.yaml
  azure:
    values:
    - environments/azure/values.yaml
    secrets:
    - environments/azure/secret.yaml
  gcp:
    values:
    - environments/gcp/values.yaml
    secrets:
    - environments/gcp/secret.yaml
  aws:
    values:
    - environments/aws/values.yaml
    secrets:
    - environments/aws/secret.yaml
