---
apiVersion: kafka.strimzi.io/v1beta1
kind: Kafka
metadata:
  name: my-cluster
  namespace: my-kafka-project
spec:
  kafka:
    replicas: 1
    listeners:
      plain: {}
      tls: {}
      external:
        type: nodeport
        tls: false
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: 100Gi
        deleteClaim: false
    config:
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
    metrics:
      lowercaseOutputName: true
  zookeeper:
    replicas: 1
    storage:
      type: persistent-claim
      size: 100Gi
      deleteClaim: false
    metrics:
      lowercaseOutputName: true
  entityOperator:
    topicOperator: {}
    userOperator: {}
---
apiVersion: kafka.strimzi.io/v1beta1
kind: KafkaTopic
metadata:
  name: my-topic
  namespace: my-kafka-project
  labels:
    strimzi.io/cluster: "my-cluster"
spec:
  partitions: 3
  replicas: 1
---
apiVersion: kafka.strimzi.io/v1alpha1
kind: KafkaBridge
metadata:
  name: my-bridge
  namespace: my-kafka-project
spec:
  replicas: 1
  bootstrapServers: my-cluster-kafka-bootstrap:9092
  bootstrapServers: my-cluster-kafka-bootstrap.my-kafka-project.svc:9092
  http:
    port: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  name: my-bridge-ingress
  namespace: my-kafka-project
spec:
  rules:
  - host: bridge.gcp.continotb.com
    http:
      paths:
      - backend:
          serviceName: my-bridge-bridge-service
          servicePort: 8080
  tls:
  - hosts:
    - bridge.gcp.continotb.com
    secretName: bridge-gcp-tls
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kafka-service-monitor
  namespace: prometheus
  labels:
    release: prometheus-operator
spec:
  selector:
    matchLabels:
      strimzi.io/kind: Kafka
  namespaceSelector:
    matchNames:
      - my-kafka-project
  endpoints:
  - port: tcp-external 
    honorLabels: true 
    scheme: http

